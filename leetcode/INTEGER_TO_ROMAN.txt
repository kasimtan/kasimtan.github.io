import org.junit.*;
import org.junit.runner.*;

/*

Given an integer, convert it to a roman numeral.

Input is guaranteed to be within the range from 1 to 3999.

*/

public class Solution {
  public static void main(String[] args) {
    JUnitCore.main("Solution");
  }

  public String intToRoman(int num) {
    int[] val = new int[] { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };
    String[] code = new String[] {
      "M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I" };
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < val.length; i++) {
      while (num - val[i] >= 0) {
        sb.append(code[i]);
        num -= val[i];
      }
    }
    return sb.toString();
  }

  @Test
  public void intToRoman_ifNis4_thenReturnsIV() {
    Assert.assertEquals("IV", intToRoman(4));
  }

  @Test
  public void intToRoman_ifNis99_thenReturnsIC() {
    Assert.assertEquals("XCIX", intToRoman(99));
  }

  @Test
  public void intToRoman_ifNis549_thenReturnsDXLIX() {
    Assert.assertEquals("DXLIX", intToRoman(549));
  }

  @Test
  public void intToRoman_ifNis3999_thenReturnsMMMCMXCIX() {
    Assert.assertEquals("MMMCMXCIX", intToRoman(3999));
  }
}
