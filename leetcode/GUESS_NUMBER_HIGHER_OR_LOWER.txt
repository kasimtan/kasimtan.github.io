import org.junit.*;
import org.junit.runner.*;

/*

We are playing the Guess Game. The game is as follows:

I pick a number from 1 to n. You have to guess which number I picked.

Every time you guess wrong, I'll tell you whether the number is higher or lower.

You call a pre-defined API guess(int num) which returns 3 possible results (-1, 1, or 0):

-1 : My number is lower
 1 : My number is higher
 0 : Congrats! You got it!

Example:
n = 10, I pick 6.
Return 6.

*/

public class Solution extends GuessGame {
  public static void main(String[] args) {
    JUnitCore.main("Solution");
  }

  public void setSecret(int num) {
    storeSecret(num);
  }

  public int guessNumber(int n) {
    int low = 1;
    int high = n;
    while(true) {
      int mid = low + (high - low) / 2;
      int result = guess(mid);
      if (result == 0) {
        return mid;
      }
      else if (result < 0) {
        high = mid - 1;
      }
      else {
        low = mid + 1;
      }
    }
  }

  @Test
  public void guessNumber_ifNis1_thenReturns1() {
    setSecret(1);
    Assert.assertEquals(1, guessNumber(1));
  }

  @Test
  public void guessNumber_ifNis2Pick2_thenReturns2() {
    setSecret(2);
    Assert.assertEquals(2, guessNumber(2));
  }

  @Test
  public void guessNumber_ifNis1000Pick1_thenReturns1() {
    setSecret(1);
    Assert.assertEquals(1, guessNumber(1000));
  }

  @Test
  public void guessNumber_ifNisIntegerMaxPickIntegerMax_thenReturnsIntegerMax() {
    setSecret(Integer.MAX_VALUE);
    Assert.assertEquals(Integer.MAX_VALUE, guessNumber(Integer.MAX_VALUE));
  }
}

class GuessGame {
  private int secret = 0;
  public void storeSecret(int num) {
    this.secret = num;
  }
  public int guess(int num) {
    if (num == this.secret) return 0;
    else if (num < this.secret) return 1;
    return -1;
  }
}
