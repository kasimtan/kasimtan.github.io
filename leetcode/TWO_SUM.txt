import java.util.*;
import org.junit.*;
import org.junit.runner.*;

/*

Given an array of integers, return indices of the two numbers such that
they add up to a specific target.

You may assume that each input would have exactly one solution.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

*/

public class Solution {
  public static void main(String[] args) {
    JUnitCore.main("Solution");
  }
  
  public int[] twoSum(int[] nums, int target) {
    int[] indices = new int[2];
    Map<Integer, Integer> map = new HashMap<Integer, Integer>();
    for (int i = 0; i < nums.length; i++) {
      int num = nums[i];
      int diff = target - num;
      if (map.get(num) == null) {
        map.put(diff, i);
      }
      else {
        indices[0] = map.get(num);
        indices[1] = i;
        break;
      }
    }
    return indices;
  }
  
  @Test
  public void twoSum_ifNoSolution_thenReturnsAllZeroIndices() {
    int[] emptyArrayResult = twoSum(new int[0], 0);
    Assert.assertEquals("[0, 0]", Arrays.toString(emptyArrayResult));
    int[] oneArrayResult = twoSum(new int[] { 1 }, 0);
    Assert.assertEquals("[0, 0]", Arrays.toString(oneArrayResult));
    int[] twoArrayResult = twoSum(new int[] { 1, 2 }, 0);
    Assert.assertEquals("[0, 0]", Arrays.toString(twoArrayResult));
  }
  
  @Test
  public void twoSum_ifZeroSumTarget_thenReturnsCorrectIndices() {
    int[] zeroPlusZeroResult = twoSum(new int[] { 1, 0, 2, 0 }, 0);
    Assert.assertEquals("[1, 3]", Arrays.toString(zeroPlusZeroResult));
    int[] negPlusPosResult = twoSum(new int[] { -2, 1, 2 }, 0);
    Assert.assertEquals("[0, 2]", Arrays.toString(negPlusPosResult));
    int[] xtremeCaseResult = twoSum(new int[] { Integer.MAX_VALUE, Integer.MIN_VALUE+1 }, 0);
    Assert.assertEquals("[0, 1]", Arrays.toString(xtremeCaseResult));
  }
  
  @Test
  public void twoSum_ifPositiveNumsArray_thenReturnsCorrectIndices() {
    int[] randomNumsResult = twoSum(new int[] { 2, 10, 5, 9, 4 }, 9);
    Assert.assertEquals("[2, 4]", Arrays.toString(randomNumsResult));
    int[] duplicatesResult = twoSum(new int[] { 2, 2, 1, 1 }, 4);
    Assert.assertEquals("[0, 1]", Arrays.toString(duplicatesResult));
  }
  
  @Test
  public void twoSum_ifMixedNumsArray_thenReturnsCorrectIndices() {
    int[] randomNumsResult = twoSum(new int[] { -1, -20, 12, 8, 1, -9 }, -12);
    Assert.assertEquals("[1, 3]", Arrays.toString(randomNumsResult));
  }
}