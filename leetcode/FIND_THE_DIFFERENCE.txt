import org.junit.*;
import org.junit.runner.*;

/*

Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then
add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.

*/

public class Solution {
  public static void main(String[] args) {
    JUnitCore.main("Solution");
  }

  public char findTheDifference(String s, String t) {
    if (s == null || t == null) return '-';
    int[] count = new int[26];
    for (char c : s.toCharArray()) {
      count[c - 'a'] += 1;
    }
    for (char c : t.toCharArray()) {
      count[c - 'a'] -= 1;
    }
    for (int i = 0; i < count.length; i++) {
      if (count[i] < 0) return (char)(i + 'a');
    }
    return '-';
  }

  @Test
  public void findTheDifference_ifSIsNull_thenReturnsDash() {
    Assert.assertEquals('-', findTheDifference(null, ""));
  }

  @Test
  public void findTheDifference_ifTIsNull_thenReturnsDash() {
    Assert.assertEquals('-', findTheDifference("", null));
  }

  @Test
  public void findTheDifference_ifNoDifference_thenReturnsDash() {
    Assert.assertEquals('-', findTheDifference("abc", "cba"));
  }

  @Test
  public void findTheDifference_ifDiffIsUnique_thenReturnsCorrectDiff() {
    Assert.assertEquals('e', findTheDifference("abcd", "bcdea"));
  }

  @Test
  public void findTheDifference_ifDiffIsDuplicate_thenReturnsCorrectDiff() {
    Assert.assertEquals('b', findTheDifference("abcd", "bcdba"));
  }
}
